rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Link Profiles collection rules
    match /linkProfiles/{profileId} {
      // Allow read if the profile is public or the user owns it
      allow read: if isAuthenticated() && (
        resource.data.isActive == true || 
        isOwner(resource.data.userId)
      );

      // Allow create if user is authenticated
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;

      // Allow update/delete if user owns the profile
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if the user is authenticated
      allow read: if isAuthenticated();
      
      // Allow create if user is authenticated and creating their own document
      allow create: if isAuthenticated() && 
        userId == request.auth.uid;
      
      // Allow update/delete if user owns the document
      allow update, delete: if isOwner(userId);
    }
  }
}